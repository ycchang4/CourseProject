WEBVTT Kind: captions; Language: en-US

NOTE
Created on 2021-02-27T00:00:47.7802403Z by ClassTranscribe

00:00:00.280 --> 00:00:02.460
So now let's take a look at the

00:00:02.460 --> 00:00:03.620
specificÂ 

00:00:10.770 --> 00:00:13.670
Method that's based on regression.

00:00:13.670 --> 00:00:15.275
Now this is one of the many different

00:00:15.275 --> 00:00:15.660
methods.

00:00:15.660 --> 00:00:17.650
In fact, it's one of the simplest

00:00:17.650 --> 00:00:20.325
methods and I choose this to explain

00:00:20.325 --> 00:00:23.410
the idea because it's simple.

00:00:26.270 --> 00:00:29.770
So in this approach, we simply assume

00:00:29.770 --> 00:00:34.490
that the relevance of document with

00:00:34.490 --> 00:00:37.310
respect to query is related to a linear

00:00:37.310 --> 00:00:39.680
combination of all the features.

00:00:39.680 --> 00:00:42.370
Here are used Xi

00:00:43.850 --> 00:00:44.780
to

00:00:45.450 --> 00:00:50.745
denote the feature, so Xi of Q and D is a

00:00:50.745 --> 00:00:51.030
feature.

00:00:51.640 --> 00:00:54.209
And we can have as many features as we

00:00:54.210 --> 00:00:54.870
would like.

00:00:55.800 --> 00:00:57.830
And we assume that

00:00:58.400 --> 00:01:00.930
these features can be combined in a

00:01:00.930 --> 00:01:01.890
linear manner.

00:01:03.270 --> 00:01:05.260
And each feature is controlled by a

00:01:05.260 --> 00:01:06.380
parameter here.

00:01:07.030 --> 00:01:09.290
And beta is a parameter that's a

00:01:09.290 --> 00:01:11.730
weighting parameter, a larger value would mean

00:01:11.730 --> 00:01:15.800
the feature would have a higher weight

00:01:15.800 --> 00:01:17.730
and would contribute more to the

00:01:17.730 --> 00:01:18.425
scoring function.

00:01:18.425 --> 00:01:21.290
The specific form of the function

00:01:21.290 --> 00:01:24.850
actually also involves a transformation

00:01:24.850 --> 00:01:27.310
of the probability of relevance.

00:01:27.310 --> 00:01:29.147
So this is the probability of

00:01:29.147 --> 00:01:29.540
relevance.

00:01:30.570 --> 00:01:32.090
We know that the probability of

00:01:32.090 --> 00:01:35.170
relevance is within the range from 0

00:01:35.170 --> 00:01:35.780
to 1.

00:01:36.750 --> 00:01:39.270
And we could have just assumed the

00:01:39.270 --> 00:01:42.520
scoring function is related to this

00:01:42.520 --> 00:01:44.080
linear combination, right?

00:01:44.080 --> 00:01:47.890
So we can do a linear regression, but

00:01:47.890 --> 00:01:50.986
then the value of this linear

00:01:50.986 --> 00:01:53.070
combination could easily go beyond

00:01:53.070 --> 00:01:55.530
one, so this transformation here

00:01:56.080 --> 00:02:02.109
would map the zero to 1 range

00:02:02.110 --> 00:02:05.200
to the whole range of real values.

00:02:05.200 --> 00:02:08.570
You can verify it by yourself.

00:02:09.620 --> 00:02:10.960
So.

00:02:12.520 --> 00:02:15.520
This allows us then to connect the

00:02:15.520 --> 00:02:17.460
probability of relevance which is

00:02:17.460 --> 00:02:20.390
between zero and one to a linear

00:02:20.390 --> 00:02:22.160
combination of arbitrary features.

00:02:22.890 --> 00:02:25.285
And if we rewrite this into a

00:02:25.285 --> 00:02:27.260
probability function we would get the

00:02:27.260 --> 00:02:30.900
next one, so on this on this equation

00:02:30.900 --> 00:02:33.540
then we will have the probability of

00:02:33.540 --> 00:02:34.390
relevance.

00:02:35.280 --> 00:02:37.630
And on the right hand side we would have

00:02:37.630 --> 00:02:38.430
this form.

00:02:39.320 --> 00:02:42.710
Now this form is clearly non negative and

00:02:42.710 --> 00:02:44.280
it still involves the linear

00:02:44.280 --> 00:02:45.880
combination of features.

00:02:46.470 --> 00:02:48.070
And it's also clear that

00:02:48.670 --> 00:02:52.720
if this value is, this is actually

00:02:52.720 --> 00:02:57.080
negative of the linear combination in

00:02:57.080 --> 00:02:59.999
the equation above, if this,

00:03:01.700 --> 00:03:03.560
This value here.

00:03:05.660 --> 00:03:06.040
If.

00:03:06.790 --> 00:03:09.620
This value is large, then it would mean

00:03:09.620 --> 00:03:13.456
this value is small and therefore this

00:03:13.456 --> 00:03:15.876
probability this whole probability would

00:03:15.876 --> 00:03:18.590
be large and that's what we expect.

00:03:18.590 --> 00:03:20.590
Basically it would mean if this

00:03:20.590 --> 00:03:23.700
combination gives us a high value, then

00:03:23.700 --> 00:03:25.780
the documents more likely relevant.

00:03:26.620 --> 00:03:28.970
So this is our hypothesis.

00:03:28.970 --> 00:03:31.180
Again, this is not necessarily the best

00:03:31.180 --> 00:03:34.600
hypothesis, but this is a simple way to

00:03:34.600 --> 00:03:37.770
connect these features with the

00:03:37.770 --> 00:03:39.230
probability of relevance.

00:03:40.420 --> 00:03:43.710
So now we have this combination

00:03:43.710 --> 00:03:44.315
function.

00:03:44.315 --> 00:03:47.761
The next task is to see how we to

00:03:47.761 --> 00:03:50.420
estimate the parameters so that the

00:03:50.420 --> 00:03:53.210
function can actually be applied without

00:03:53.210 --> 00:03:56.480
knowing the beta values, it's harder to

00:03:56.480 --> 00:04:00.023
apply this function, so let's see how

00:04:00.023 --> 00:04:01.909
we can estimate beta values.

00:04:04.210 --> 00:04:08.620
Let's take a look at a simple example.

00:04:08.620 --> 00:04:11.300
In this example we have 3 features.

00:04:11.300 --> 00:04:14.337
One is BM25 score of the document and

00:04:14.337 --> 00:04:17.420
query one is the page rank score of the

00:04:17.420 --> 00:04:19.560
document, which might or might not

00:04:19.560 --> 00:04:21.170
depend on the query.

00:04:21.170 --> 00:04:24.030
We might have a topic sensitive

00:04:24.030 --> 00:04:25.889
Pagerank that would depend on query.

00:04:25.890 --> 00:04:28.340
Otherwise the general page rank doesn't

00:04:28.340 --> 00:04:30.730
really depend on query and then we have

00:04:30.730 --> 00:04:33.710
BM25 score on the anchor text of

00:04:33.710 --> 00:04:34.480
the document.

00:04:35.430 --> 00:04:38.380
These are then the feature values for a

00:04:38.380 --> 00:04:40.850
particular Doc document query pair.

00:04:41.740 --> 00:04:44.770
An in this case, the document is D1,

00:04:44.770 --> 00:04:46.880
and the judgment that says that is

00:04:46.880 --> 00:04:47.490
relevant.

00:04:48.700 --> 00:04:50.740
Here's another training instance and

00:04:50.740 --> 00:04:52.400
with these feature values.

00:04:54.760 --> 00:04:56.610
But in this case it's not relevant.

00:04:56.610 --> 00:05:00.760
OK, this is overly simplified case

00:05:00.760 --> 00:05:02.640
where we just have two instances.

00:05:03.560 --> 00:05:05.680
But it is sufficient to illustrate the

00:05:05.680 --> 00:05:06.160
point.

00:05:06.160 --> 00:05:08.650
So what we can do is we use the maximum

00:05:08.650 --> 00:05:10.330
likelihood estimator to actually

00:05:10.330 --> 00:05:11.860
estimate the parameters.

00:05:13.080 --> 00:05:17.000
Basically, we are going to predict the

00:05:17.000 --> 00:05:19.600
relevance status of the document that

00:05:19.600 --> 00:05:22.450
based on the feature values that is

00:05:22.450 --> 00:05:24.676
given that we observe these feature

00:05:24.676 --> 00:05:25.550
values here.

00:05:28.430 --> 00:05:31.580
Can we predict the relevance?

00:05:31.580 --> 00:05:34.270
Yeah, and of course the prediction will

00:05:34.270 --> 00:05:36.140
be using this function.

00:05:37.070 --> 00:05:38.280
That you see here.

00:05:38.960 --> 00:05:41.400
And we hypothesize that the probability

00:05:41.400 --> 00:05:43.120
of relevance is related to features in

00:05:43.120 --> 00:05:46.560
this way, so we're going to see for

00:05:46.560 --> 00:05:48.130
what values of beta.

00:05:48.830 --> 00:05:51.054
We can predict the relevance well.

00:05:51.054 --> 00:05:52.368
What do we?

00:05:52.368 --> 00:05:56.398
What do we mean by predicting the

00:05:56.398 --> 00:05:57.182
relevance well?

00:05:57.182 --> 00:06:00.600
we just mean in the first case

00:06:00.600 --> 00:06:01.415
for D1.

00:06:01.415 --> 00:06:05.640
This expression here right here should

00:06:05.640 --> 00:06:06.695
give a high values.

00:06:06.695 --> 00:06:09.820
In fact, we hope this to give a value

00:06:09.820 --> 00:06:11.129
close to one, why?

00:06:11.130 --> 00:06:13.620
because this is a relevant document.

00:06:14.630 --> 00:06:16.940
On the other hand, in the second case

00:06:16.940 --> 00:06:20.850
for D2, we hope this value will be

00:06:20.850 --> 00:06:21.600
small.

00:06:21.600 --> 00:06:23.620
Why? Because

00:06:23.620 --> 00:06:25.330
It's a non relevant document.

00:06:26.530 --> 00:06:28.790
So now let's see how this can be

00:06:28.790 --> 00:06:30.005
mathematically expressed.

00:06:30.005 --> 00:06:32.900
This is similar to expressing the

00:06:32.900 --> 00:06:34.890
probability of document.

00:06:35.530 --> 00:06:37.440
Only that we're not talking about the

00:06:37.440 --> 00:06:39.890
probability of words, but talking about

00:06:39.890 --> 00:06:42.200
probability of relevance one or zero.

00:06:43.530 --> 00:06:46.180
So what's the probability of this

00:06:46.180 --> 00:06:46.890
document?

00:06:48.370 --> 00:06:52.170
The relevant if it has these feature

00:06:52.170 --> 00:06:53.060
values.

00:06:54.170 --> 00:06:57.860
This is just this expression, right?

00:06:57.860 --> 00:07:00.310
We just need to plug in the Xi(s).

00:07:00.880 --> 00:07:02.320
So that's what we will get.

00:07:02.320 --> 00:07:05.250
It's exactly like.

00:07:06.140 --> 00:07:09.020
What we have seen above, only that we

00:07:09.020 --> 00:07:13.510
replaced these Xi(s) with now specific

00:07:13.510 --> 00:07:15.000
values, right?

00:07:15.000 --> 00:07:18.220
So for example, this .7Â  goes

00:07:18.220 --> 00:07:21.560
to here and this .11.

00:07:22.610 --> 00:07:23.990
goes to here.

00:07:25.630 --> 00:07:27.025
And these are different feature values

00:07:27.025 --> 00:07:28.990
and we combine them in this particular

00:07:28.990 --> 00:07:29.365
way.

00:07:29.365 --> 00:07:31.920
The beta values are still unknown, but

00:07:31.920 --> 00:07:34.970
this gives us the probability that this

00:07:34.970 --> 00:07:38.350
document is relevant if we assume such

00:07:38.350 --> 00:07:38.980
a model.

00:07:39.550 --> 00:07:41.310
OK, we would want to maximize this

00:07:41.310 --> 00:07:43.300
probability, since this is a relevant

00:07:43.300 --> 00:07:43.940
document.

00:07:44.770 --> 00:07:48.060
What we do for the second document?

00:07:48.060 --> 00:07:49.470
Well, we want to compute the

00:07:49.470 --> 00:07:52.380
probability that the prediction is non

00:07:52.380 --> 00:07:52.940
relevant.

00:07:53.510 --> 00:07:54.280
So.

00:07:55.100 --> 00:07:58.170
This would mean we have to compute 1

00:07:58.170 --> 00:07:59.190
minus.

00:08:00.080 --> 00:08:01.130
This expression.

00:08:02.210 --> 00:08:04.340
Since this expression.

00:08:05.290 --> 00:08:07.335
Is actually the probability of

00:08:07.335 --> 00:08:07.830
relevance.

00:08:07.830 --> 00:08:10.680
So to compute the non relevance from

00:08:10.680 --> 00:08:12.640
relevance we just.

00:08:13.240 --> 00:08:15.780
Do 1 minus the probability of

00:08:15.780 --> 00:08:16.300
relevance.

00:08:17.100 --> 00:08:17.720
OK.

00:08:18.400 --> 00:08:21.660
So this whole expression then just is

00:08:21.660 --> 00:08:25.830
our probability of predicting these

00:08:25.830 --> 00:08:26.480
two.

00:08:27.130 --> 00:08:32.500
Relevance values one is 1 here, one is zero

00:08:32.500 --> 00:08:36.030
and this whole equation is our

00:08:36.030 --> 00:08:37.030
probability.

00:08:37.580 --> 00:08:40.040
Of observing a 1 here.

00:08:40.800 --> 00:08:42.840
And observing a zero here.

00:08:43.970 --> 00:08:47.080
Of course, this probability depends on

00:08:47.080 --> 00:08:48.420
the beta values.

00:08:49.480 --> 00:08:53.640
Right so then our goal is to adjust the

00:08:53.640 --> 00:08:56.260
beta values to make this whole thing

00:08:56.260 --> 00:08:57.362
reach its maximum.

00:08:57.362 --> 00:08:59.400
Make it as large as possible.

00:09:00.360 --> 00:09:02.010
So that means we're going to compute

00:09:02.010 --> 00:09:02.335
this.

00:09:02.335 --> 00:09:06.090
The beta is just the parameter values

00:09:06.090 --> 00:09:08.460
that would maximize this whole likelihood

00:09:08.460 --> 00:09:10.430
expression.

00:09:11.430 --> 00:09:14.420
And what that means is if look at the

00:09:14.420 --> 00:09:17.084
function is we are going to choose betas to

00:09:17.084 --> 00:09:20.566
make this as large as possible and make

00:09:20.566 --> 00:09:21.079
this.

00:09:22.620 --> 00:09:25.320
Also, as large as possible, which is

00:09:25.320 --> 00:09:27.640
equivalent to, say, make this the

00:09:27.640 --> 00:09:29.540
part as small as possible.

00:09:30.440 --> 00:09:32.480
And this is precisely what we want.

00:09:34.420 --> 00:09:37.160
So once we do the training now we will

00:09:37.160 --> 00:09:38.800
know the beta values.

00:09:38.800 --> 00:09:42.680
So then this function would be well

00:09:42.680 --> 00:09:45.840
defined once beta values are known.

00:09:45.840 --> 00:09:47.870
Both this and this.

00:09:48.430 --> 00:09:51.230
Would be completely specified, so for

00:09:51.230 --> 00:09:53.440
any new query and new documents, we can

00:09:53.440 --> 00:09:55.150
simply compute the features.

00:09:55.750 --> 00:09:58.850
For that pair and then we just use this

00:09:58.850 --> 00:10:00.820
formula to generate the ranking score

00:10:00.820 --> 00:10:03.660
and this scoring function can be used

00:10:03.660 --> 00:10:05.660
to rank documents for a particular

00:10:05.660 --> 00:10:06.050
query.

00:10:06.610 --> 00:10:09.220
So that's the basic idea of learning to

00:10:09.220 --> 00:10:09.680
rank.


