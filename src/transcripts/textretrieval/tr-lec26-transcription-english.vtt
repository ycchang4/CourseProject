WEBVTT Kind: captions; Language: en-US

NOTE
Created on 2021-02-27T00:07:09.3449713Z by ClassTranscribe

00:00:00.280 --> 00:00:02.490
This lecture is about the feedback in

00:00:02.490 --> 00:00:03.500
text retrieval.

00:00:12.760 --> 00:00:14.640
So in this lecture we're going to

00:00:14.640 --> 00:00:16.290
continue the discussion of text

00:00:16.290 --> 00:00:17.290
retrieval methods.

00:00:18.510 --> 00:00:19.800
In particular, we're going to talk

00:00:19.800 --> 00:00:21.790
about the feedback impacts retrieval.

00:00:24.910 --> 00:00:27.300
This is a diagram that shows the

00:00:27.300 --> 00:00:28.460
retrieval process.

00:00:30.560 --> 00:00:34.440
We can see the user with typing the

00:00:34.440 --> 00:00:35.110
query.

00:00:37.210 --> 00:00:40.480
And then the query would be sent to a

00:00:40.480 --> 00:00:42.690
retrieval engine or search engine.

00:00:43.250 --> 00:00:45.270
And the engine will return results.

00:00:45.900 --> 00:00:47.600
These results will be shown to the

00:00:47.600 --> 00:00:48.050
user.

00:00:49.340 --> 00:00:52.000
After the user has seen these results.

00:00:52.630 --> 00:00:55.186
The user can actually make judgments.

00:00:55.186 --> 00:00:57.555
So for example, the user had said this

00:00:57.555 --> 00:01:00.046
is good and this document is not very

00:01:00.046 --> 00:01:00.432
useful.

00:01:00.432 --> 00:01:03.160
This is good again, etc.

00:01:03.160 --> 00:01:05.050
Now this is called a relevant judgment

00:01:05.050 --> 00:01:08.360
or relevance feedback because we've got

00:01:08.360 --> 00:01:10.559
some feedback information from the user

00:01:10.560 --> 00:01:12.258
based on the judgments.

00:01:12.258 --> 00:01:14.770
This can be very useful to the system

00:01:14.770 --> 00:01:15.300
we learn.

00:01:15.300 --> 00:01:18.083
What exactly is interesting to the

00:01:18.083 --> 00:01:18.344
user.

00:01:18.344 --> 00:01:21.145
So the feedback module would then take

00:01:21.145 --> 00:01:22.190
this as input.

00:01:22.640 --> 00:01:24.830
And also use the document collection

00:01:24.830 --> 00:01:26.580
to try to improve ranking.

00:01:26.580 --> 00:01:29.440
Typically it would involve updating the

00:01:29.440 --> 00:01:32.890
query so the system can now rank the

00:01:32.890 --> 00:01:34.800
results more accurately for the user.

00:01:34.800 --> 00:01:36.522
So this is all relevance feedback.

00:01:36.522 --> 00:01:38.800
The feedback is based on relevance

00:01:38.800 --> 00:01:41.740
judgments made by the users.

00:01:42.360 --> 00:01:44.720
Now these judgments are reliable, but

00:01:44.720 --> 00:01:47.770
the users generally don't want to make

00:01:47.770 --> 00:01:50.360
extra effort unless they have to.

00:01:50.360 --> 00:01:52.420
So the downside is that it involves

00:01:52.420 --> 00:01:55.160
some extra effort by the user.

00:01:57.180 --> 00:01:58.730
There was another form of feedback

00:01:58.730 --> 00:02:00.850
called pseudo relevance feedback or

00:02:00.850 --> 00:02:03.160
blind feedback, also called automatic

00:02:03.160 --> 00:02:03.750
feedback.

00:02:03.750 --> 00:02:05.490
In this case you can see.

00:02:06.510 --> 00:02:08.580
Once the user has got without all in

00:02:08.580 --> 00:02:11.500
fact we don't have to involve users so

00:02:11.500 --> 00:02:13.430
you can see there's no user involved

00:02:13.430 --> 00:02:13.990
here.

00:02:14.640 --> 00:02:17.120
And we simply assume that the top

00:02:17.120 --> 00:02:19.920
ranked documents to be relevant.

00:02:19.920 --> 00:02:23.535
Let's say we can assume top ten as

00:02:23.535 --> 00:02:24.150
relevant.

00:02:25.130 --> 00:02:27.680
And then we would then use these.

00:02:27.680 --> 00:02:31.550
Assumed documents to learn and to

00:02:31.550 --> 00:02:33.200
improve the query.

00:02:34.000 --> 00:02:36.760
Now you might wonder how could this

00:02:36.760 --> 00:02:39.200
help if we simply assume the top ranked

00:02:39.200 --> 00:02:41.480
documents to be relavant well.

00:02:43.130 --> 00:02:46.220
You can imagine these top ranked

00:02:46.220 --> 00:02:49.595
documents are actually similar to

00:02:49.595 --> 00:02:51.490
relevant documents, even if they are

00:02:51.490 --> 00:02:51.940
not relevant.

00:02:51.940 --> 00:02:53.660
They look like relevant documents, so

00:02:53.660 --> 00:02:56.080
it's possible to learn some related

00:02:56.080 --> 00:02:59.230
terms to the query from this set.

00:02:59.230 --> 00:03:01.150
In fact, there you may recall that we

00:03:01.150 --> 00:03:03.530
talked about using language model to

00:03:03.530 --> 00:03:06.000
analyze word association to learn

00:03:06.000 --> 00:03:08.360
related words to the word "computer"

00:03:08.360 --> 00:03:11.100
right, and then what we did is we first

00:03:11.100 --> 00:03:13.480
use computer to retrieve all the

00:03:13.480 --> 00:03:15.140
documents that contain computer.

00:03:15.460 --> 00:03:17.650
So imagine now the query here is a

00:03:17.650 --> 00:03:19.160
computer right?

00:03:19.160 --> 00:03:21.610
And then the results will be those

00:03:21.610 --> 00:03:24.180
documents that contain computer and

00:03:24.180 --> 00:03:27.170
what we can do then is to take the top

00:03:27.170 --> 00:03:28.870
N results.

00:03:28.870 --> 00:03:31.766
They can match computer very well and

00:03:31.766 --> 00:03:35.574
we're going to count the terms in this

00:03:35.574 --> 00:03:36.088
set.

00:03:36.088 --> 00:03:39.620
And then we're going to then use the

00:03:39.620 --> 00:03:41.406
background language model to choose the

00:03:41.406 --> 00:03:44.670
terms that are frequent in this set,

00:03:44.670 --> 00:03:46.050
but not frequent

00:03:46.110 --> 00:03:47.375
In the whole collection.

00:03:47.375 --> 00:03:50.470
So if we make a contrast between these

00:03:50.470 --> 00:03:54.189
two, what we can find these that would

00:03:54.190 --> 00:03:56.460
learn some related terms to the word

00:03:56.460 --> 00:03:57.260
computer?

00:03:57.260 --> 00:03:59.210
As we have seen before and these

00:03:59.210 --> 00:04:02.330
related words can then be added to the

00:04:02.330 --> 00:04:04.886
original query to expand the query and

00:04:04.886 --> 00:04:06.970
this would help us bring documents that

00:04:06.970 --> 00:04:08.820
don't necessarily match computer but

00:04:08.820 --> 00:04:10.450
match other words like a program and

00:04:10.450 --> 00:04:11.120
software.

00:04:11.120 --> 00:04:14.120
So this is the effective for improving

00:04:14.120 --> 00:04:16.640
the search result.

00:04:18.540 --> 00:04:20.410
But of course, pseudo relavance feedback

00:04:20.410 --> 00:04:21.372
is completely unreliable.

00:04:21.372 --> 00:04:24.140
We have to arbitrary set a cut off, so

00:04:24.140 --> 00:04:25.570
there's also something in between

00:04:25.570 --> 00:04:26.695
called implicit feedback.

00:04:26.695 --> 00:04:29.580
In this case, what we do is we do

00:04:29.580 --> 00:04:31.770
involve users, but we don't have to

00:04:31.770 --> 00:04:33.500
have asked users to make judgments

00:04:33.500 --> 00:04:35.880
instead, or even the observe how the

00:04:35.880 --> 00:04:38.082
user interacts with the search result.

00:04:38.082 --> 00:04:40.305
In this case, we're going to look at

00:04:40.305 --> 00:04:43.081
the clickthroughs so the user clicked on

00:04:43.081 --> 00:04:45.564
this one and the user viewed this one

00:04:45.564 --> 00:04:47.990
and the user skipped this one and the

00:04:47.990 --> 00:04:49.640
user view this one again.

00:04:49.910 --> 00:04:54.060
Now this also is a clue about whether a

00:04:54.060 --> 00:04:55.800
document is useful to the user.

00:04:56.770 --> 00:04:59.420
And we can even assume that we're going

00:04:59.420 --> 00:05:02.580
to use only the snippet here in this

00:05:02.580 --> 00:05:03.050
document.

00:05:03.050 --> 00:05:05.520
The text that's actually seen by the

00:05:05.520 --> 00:05:08.853
user instead of the actual document of

00:05:08.853 --> 00:05:10.270
this entry.

00:05:10.270 --> 00:05:13.050
The link there, let's say in web

00:05:13.050 --> 00:05:14.850
search may be broken, but then it

00:05:14.850 --> 00:05:16.850
doesn't matter if the user tried to

00:05:16.850 --> 00:05:19.042
fetch this document, because of the

00:05:19.042 --> 00:05:20.126
display, the text.

00:05:20.126 --> 00:05:21.997
We can assume these display.

00:05:21.997 --> 00:05:25.660
The text is probably relevant, is

00:05:25.660 --> 00:05:26.740
interesting to user.

00:05:26.860 --> 00:05:29.160
So we can learn from such information

00:05:29.160 --> 00:05:31.150
and this is called implicit feedback.

00:05:31.710 --> 00:05:34.210
And we can again use the information to

00:05:34.210 --> 00:05:35.090
update the query.

00:05:35.090 --> 00:05:37.940
This is a very important technique used

00:05:37.940 --> 00:05:39.150
in modern search engines.

00:05:39.150 --> 00:05:41.870
Will think about the Google and Bing

00:05:41.870 --> 00:05:43.910
and they can collect a lot of user

00:05:43.910 --> 00:05:46.730
activities while they're serving us,

00:05:46.730 --> 00:05:46.940
right?

00:05:46.940 --> 00:05:49.000
So they would observe what documents we

00:05:49.000 --> 00:05:51.290
click on, what documents will skip, and

00:05:51.290 --> 00:05:54.006
this information is very valuable and

00:05:54.006 --> 00:05:57.410
they can use this to improve the search

00:05:57.410 --> 00:05:57.950
engine.

00:05:58.880 --> 00:06:01.150
So to summarize, we talked about the

00:06:01.150 --> 00:06:03.230
three kinds of feedback here.

00:06:03.230 --> 00:06:05.460
Relevance feedback, where the user

00:06:05.460 --> 00:06:07.160
makes explicit judgments.

00:06:07.160 --> 00:06:08.800
It takes some user effort, but the

00:06:08.800 --> 00:06:11.280
judgment the information is reliable.

00:06:11.280 --> 00:06:13.499
We talk about pseudo feedback where we

00:06:13.500 --> 00:06:16.680
simply assume top-ranked documents to be

00:06:16.680 --> 00:06:17.035
relevant.

00:06:17.035 --> 00:06:18.820
We don't have to involve the user,

00:06:18.820 --> 00:06:20.830
therefore we could do that actually,

00:06:20.830 --> 00:06:23.470
before we return the results to the

00:06:23.470 --> 00:06:23.720
user.

00:06:24.750 --> 00:06:26.470
And the third is implicit feedback,

00:06:26.470 --> 00:06:28.190
where we use click clues.

00:06:29.550 --> 00:06:31.790
We don't we involved users, but the

00:06:31.790 --> 00:06:33.910
user doesn't have to make explicit

00:06:33.910 --> 00:06:35.750
effort to make judgment.


