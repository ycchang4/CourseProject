WEBVTT Kind: captions; Language: en-US

NOTE
Created on 2021-02-27T00:07:13.7616410Z by ClassTranscribe

00:00:00.300 --> 00:00:03.390
This lecture is about evaluation of

00:00:03.390 --> 00:00:04.240
text cluster.

00:00:12.700 --> 00:00:14.920
So far we have talked about multiple

00:00:14.920 --> 00:00:17.450
ways of doing text clustering but

00:00:18.030 --> 00:00:21.060
how do we know which method works the

00:00:21.060 --> 00:00:21.560
best?

00:00:22.870 --> 00:00:24.780
So this has to do with evaluation.

00:00:25.420 --> 00:00:26.840
Now to talk about evaluation,

00:00:26.840 --> 00:00:29.390
one must go to go back to the clustering

00:00:29.390 --> 00:00:31.080
bias that we introduced at the

00:00:31.080 --> 00:00:31.610
beginning.

00:00:32.490 --> 00:00:35.040
Because two objects can be similar

00:00:35.040 --> 00:00:37.610
depending on how you look at them,

00:00:37.610 --> 00:00:40.560
we must clearly specify the perspective

00:00:40.560 --> 00:00:41.490
of similarity.

00:00:41.490 --> 00:00:44.300
Without that, the problem of clustering

00:00:44.300 --> 00:00:45.410
is not well defined.

00:00:46.080 --> 00:00:49.380
So this perspective is also very

00:00:49.380 --> 00:00:51.220
important for evaluation.

00:00:51.220 --> 00:00:53.550
If you look at this slide and you can

00:00:53.550 --> 00:00:55.945
see we have two different ways to

00:00:55.945 --> 00:00:57.870
cluster these shapes.

00:00:57.870 --> 00:01:01.311
An if you ask a question, which one is

00:01:01.311 --> 00:01:05.060
the best or which one is better you actually see

00:01:05.060 --> 00:01:06.560
there's no way to answer this question

00:01:06.560 --> 00:01:08.797
without knowing whether we'd like to

00:01:08.797 --> 00:01:11.364
cluster based on shapes or cluster

00:01:11.364 --> 00:01:12.990
based on sizes.

00:01:12.990 --> 00:01:15.300
And that's precisely why the

00:01:15.300 --> 00:01:17.410
perspective or clustering bias

00:01:17.460 --> 00:01:18.970
is crucial for evaluation.

00:01:19.580 --> 00:01:21.590
In general, we can evaluate text

00:01:21.590 --> 00:01:23.580
clusters in two ways.

00:01:23.580 --> 00:01:25.350
One is direct evaluation and the

00:01:25.350 --> 00:01:27.710
other is indirect evaluation. So

00:01:27.710 --> 00:01:29.130
in directl valuation,

00:01:29.130 --> 00:01:31.180
we want to answer the following

00:01:31.180 --> 00:01:32.140
question:

00:01:32.140 --> 00:01:33.796
How close are the system generated

00:01:33.796 --> 00:01:36.410
clusters to the ideal clusters that are

00:01:36.410 --> 00:01:37.490
generated by humans?

00:01:38.490 --> 00:01:43.220
So the closeness here can be assessed

00:01:43.220 --> 00:01:46.220
assessed from multiple perspectives

00:01:46.220 --> 00:01:49.730
and that would help us characterize the

00:01:49.730 --> 00:01:52.120
quality of clustering results in

00:01:52.120 --> 00:01:53.750
multiple angles.

00:01:53.750 --> 00:01:55.540
And this is sometimes desirable.

00:01:56.640 --> 00:01:57.360
Now.

00:01:57.920 --> 00:02:00.290
We also want to quantify the

00:02:00.290 --> 00:02:03.220
closeness because this would allow us

00:02:03.220 --> 00:02:05.280
to easily compare different methods

00:02:05.280 --> 00:02:07.510
based on their performance figures.

00:02:09.750 --> 00:02:11.900
And finally, you can see in this case

00:02:11.900 --> 00:02:14.677
we essentially inject the clustering

00:02:14.677 --> 00:02:16.610
bias by using humans.

00:02:16.610 --> 00:02:21.660
Basically, humans would bring the needed or

00:02:21.660 --> 00:02:24.159
desired clustering bias.

00:02:24.160 --> 00:02:25.540
Now how do we do that exactly?

00:02:25.540 --> 00:02:27.480
The general procedure would look like

00:02:27.480 --> 00:02:27.790
this.

00:02:28.510 --> 00:02:31.560
Given the test set which consists of a

00:02:31.560 --> 00:02:34.100
lot of text objects, we can have humans

00:02:34.100 --> 00:02:36.270
who create the ideal clustering result.

00:02:36.270 --> 00:02:38.510
That is, we're going to ask humans to

00:02:38.510 --> 00:02:40.630
partition the objects to create the

00:02:40.630 --> 00:02:41.670
gold standard.

00:02:42.280 --> 00:02:44.990
And they will use their judgments based

00:02:44.990 --> 00:02:48.330
on the need of a particular application

00:02:48.330 --> 00:02:51.320
to generate what they think are the

00:02:51.320 --> 00:02:52.760
best clustering results.

00:02:52.760 --> 00:02:56.270
And this would be then used to compare

00:02:56.270 --> 00:02:58.975
with the system generated clusters from

00:02:58.975 --> 00:03:00.330
the same test set.

00:03:01.260 --> 00:03:03.508
And ideally we want the system results

00:03:03.508 --> 00:03:05.695
to be the same as human generated

00:03:05.695 --> 00:03:07.450
results, but in general they are not

00:03:07.450 --> 00:03:09.535
going to be the same, so we would like

00:03:09.535 --> 00:03:11.550
to then qualify the similarity between

00:03:11.550 --> 00:03:13.639
the system generated clusters and the

00:03:13.640 --> 00:03:15.994
gold standard clusters, and this

00:03:15.994 --> 00:03:17.820
similarity can be also measured from

00:03:17.820 --> 00:03:20.110
multiple perspectives and this will

00:03:20.110 --> 00:03:21.840
give us various measures to

00:03:21.840 --> 00:03:24.400
quantitatively evaluate a cluster

00:03:24.400 --> 00:03:28.820
clustering result and some of the

00:03:28.820 --> 00:03:30.400
commonly used measures include

00:03:30.400 --> 00:03:31.280
purity,

00:03:31.730 --> 00:03:35.430
which measures whether a cluster has

00:03:35.430 --> 00:03:37.620
similar objects from the same cluster

00:03:37.620 --> 00:03:40.590
in the gold standard and normalized

00:03:40.590 --> 00:03:43.960
mutual information is a commonly used

00:03:43.960 --> 00:03:47.780
measure which basically measures based

00:03:47.780 --> 00:03:51.514
on the identity of or the cluster of

00:03:51.514 --> 00:03:54.360
object in the system-generated results.

00:03:54.360 --> 00:03:57.000
How well can you predict the cluster of

00:03:57.000 --> 00:04:00.130
the object in the gold standard or vice

00:04:00.130 --> 00:04:00.590
versa.

00:04:01.900 --> 00:04:03.700
Mutual information captures the

00:04:03.700 --> 00:04:05.850
correlation between these cluster

00:04:05.850 --> 00:04:09.356
labels and normalized mutual

00:04:09.356 --> 00:04:12.780
information is often used for

00:04:12.780 --> 00:04:15.530
quantifying the similarity for this

00:04:15.530 --> 00:04:16.720
evaluation purpose.

00:04:16.720 --> 00:04:19.340
F measure is another possible measure.

00:04:21.180 --> 00:04:23.380
Now again, a thorough discussion of this

00:04:23.380 --> 00:04:25.650
evaluation, of these evaluations,

00:04:25.650 --> 00:04:28.120
would be beyond the scope of

00:04:28.120 --> 00:04:28.850
this course.

00:04:29.480 --> 00:04:32.415
I've suggested some reading in the end

00:04:32.415 --> 00:04:35.390
that you can take a look to know more

00:04:35.390 --> 00:04:35.960
about that.

00:04:36.840 --> 00:04:38.560
So here I just want to discuss some

00:04:38.560 --> 00:04:40.620
high level ideas that would allow you

00:04:40.620 --> 00:04:42.520
to think about how to do evaluation in

00:04:42.520 --> 00:04:43.266
your applications.

00:04:43.266 --> 00:04:45.980
The 2nd way to evaluate text clusters

00:04:45.980 --> 00:04:47.890
is to do indirect evaluation.

00:04:47.890 --> 00:04:50.010
So in this case the question to answer

00:04:50.010 --> 00:04:51.790
is how useful are the clustering

00:04:51.790 --> 00:04:54.320
results for the intended applications?

00:04:54.990 --> 00:04:58.340
Now this of course is application

00:04:58.340 --> 00:05:01.010
specific question, so usefulness is

00:05:02.680 --> 00:05:04.950
is going to depend on specific

00:05:04.950 --> 00:05:05.700
applications.

00:05:07.030 --> 00:05:09.020
In this case, the clustering bias is

00:05:09.020 --> 00:05:11.350
imposed by the intended application as

00:05:11.350 --> 00:05:11.890
well.

00:05:11.890 --> 00:05:14.730
So what counts as the best clustering

00:05:14.730 --> 00:05:17.280
result would be dependent on

00:05:17.280 --> 00:05:17.920
the application.

00:05:18.920 --> 00:05:21.960
Procedure wise we also would create the

00:05:21.960 --> 00:05:25.220
test set with text objects for the

00:05:25.220 --> 00:05:27.940
intended application to quantify the

00:05:27.940 --> 00:05:30.120
performance of the system.

00:05:31.500 --> 00:05:34.760
In this case what we care about is

00:05:34.760 --> 00:05:39.650
the contribution of clustering to some

00:05:39.650 --> 00:05:40.310
application.

00:05:40.310 --> 00:05:42.860
So we often have a baseline system

00:05:42.860 --> 00:05:43.710
to compare with.

00:05:44.820 --> 00:05:46.800
This could be the current system for

00:05:46.800 --> 00:05:48.884
doing something and then you hope to

00:05:48.884 --> 00:05:52.016
add clustering to improve it or the

00:05:52.016 --> 00:05:54.120
baseline system could be using a

00:05:54.120 --> 00:05:56.280
different clustering method and you

00:05:56.280 --> 00:05:58.230
then what you are trying to experiment

00:05:58.230 --> 00:06:01.086
with and you hope to have a better idea

00:06:01.086 --> 00:06:02.119
for clustering.

00:06:02.120 --> 00:06:04.180
So in case you have a baseline system

00:06:04.180 --> 00:06:06.130
to work with and then you can add a

00:06:06.130 --> 00:06:07.628
clustering algorithm to the baseline

00:06:07.628 --> 00:06:10.240
system to produce a clustering system.

00:06:11.600 --> 00:06:13.046
And then we're going to compare the

00:06:13.046 --> 00:06:14.360
performance of your clustering system

00:06:14.360 --> 00:06:17.183
and the baseline system in terms of the

00:06:17.183 --> 00:06:19.900
performance measure for that particular

00:06:19.900 --> 00:06:20.850
application.

00:06:20.850 --> 00:06:23.110
So in this case we call it indirect

00:06:23.110 --> 00:06:24.740
evaluation of clusters because there's

00:06:24.740 --> 00:06:28.270
no explicit assessment of the quality

00:06:28.270 --> 00:06:31.670
of clusters, but rather its to assess

00:06:31.670 --> 00:06:34.430
the contribution of clusters to a

00:06:34.430 --> 00:06:35.610
particular application.

00:06:37.240 --> 00:06:42.230
So to summarize text clustering, it's a

00:06:42.230 --> 00:06:44.940
very useful unsupervised general text

00:06:44.940 --> 00:06:47.385
mining technique as particularly

00:06:47.385 --> 00:06:50.480
useful for obtaining an overall picture

00:06:50.480 --> 00:06:52.240
of the text content.

00:06:52.240 --> 00:06:55.630
This is often needed to explore text

00:06:55.630 --> 00:06:56.030
data.

00:06:56.750 --> 00:06:58.590
And this is often the first step when you

00:06:58.590 --> 00:07:00.080
deal with a lot of text data.

00:07:01.650 --> 00:07:05.490
The second application or second kind

00:07:05.490 --> 00:07:07.000
of application is to discover

00:07:07.000 --> 00:07:08.560
interesting clustering structures in

00:07:08.560 --> 00:07:10.890
text data, and these structures can be

00:07:10.890 --> 00:07:11.820
very meaningful.

00:07:13.250 --> 00:07:15.000
There are many approaches

00:07:16.540 --> 00:07:18.600
that can be used for text clustering

00:07:18.600 --> 00:07:19.850
and we discussed them:

00:07:20.710 --> 00:07:23.473
Model based approaches and similarity

00:07:23.473 --> 00:07:24.739
based approaches.

00:07:25.470 --> 00:07:27.280
In general, strong clusters tend to

00:07:27.280 --> 00:07:29.590
show up no matter what method is used.

00:07:29.590 --> 00:07:31.070
Also the

00:07:31.780 --> 00:07:33.670
effectiveness of a method highly

00:07:33.670 --> 00:07:35.370
depends on whether the desired

00:07:35.370 --> 00:07:37.060
clustering bias is captured

00:07:37.060 --> 00:07:39.260
appropriately, and this can be done

00:07:39.260 --> 00:07:40.880
either through using the right

00:07:40.880 --> 00:07:43.190
generative model, the model design,

00:07:43.190 --> 00:07:45.263
appropriate for clustering, or the

00:07:45.263 --> 00:07:47.760
right similarity function to explicitly

00:07:47.760 --> 00:07:49.180
define bias.

00:07:49.180 --> 00:07:51.450
Deciding the optimal number of clusters

00:07:51.450 --> 00:07:54.470
is very difficult problem for all the

00:07:54.470 --> 00:07:56.080
classroom methods, and that's because

00:07:56.080 --> 00:07:59.830
it's unsupervised algorithm and there's

00:07:59.830 --> 00:08:02.150
no training data to guide us to select

00:08:02.150 --> 00:08:03.290
the best number of

00:08:03.340 --> 00:08:03.960
clusters.

00:08:04.980 --> 00:08:06.900
Now sometimes you may see some methods

00:08:06.900 --> 00:08:08.620
that can automatically determine the

00:08:08.620 --> 00:08:09.570
number of clusters.

00:08:10.200 --> 00:08:13.600
But in general, that has some implied

00:08:13.600 --> 00:08:16.190
application of clustering bias there,

00:08:16.190 --> 00:08:18.440
and that's just not specified.

00:08:18.440 --> 00:08:21.105
Without clearly defining a clustering

00:08:21.105 --> 00:08:24.080
bias, it's just impossible to say the

00:08:24.080 --> 00:08:26.500
optimal number of cluster is what?

00:08:27.110 --> 00:08:28.350
So this is

00:08:29.240 --> 00:08:31.160
important to keep in mind.

00:08:31.800 --> 00:08:34.380
And I should also say sometimes we can

00:08:34.380 --> 00:08:36.280
use application to determine the number

00:08:36.280 --> 00:08:37.130
of clusters.

00:08:37.130 --> 00:08:38.760
For example, if you are clustering search

00:08:38.760 --> 00:08:40.490
results, then obviously you don't want

00:08:40.490 --> 00:08:43.000
to generate 100 clusters, right?

00:08:43.000 --> 00:08:45.080
So the number can be dictated by the

00:08:45.080 --> 00:08:46.180
interface design.

00:08:46.750 --> 00:08:48.920
In other situations, we might be able

00:08:48.920 --> 00:08:50.530
to use the

00:08:51.630 --> 00:08:54.910
fitness of data to assess whether

00:08:54.910 --> 00:08:57.128
we've got a good number of clusters

00:08:57.128 --> 00:08:59.880
to explain our data well and to do

00:08:59.880 --> 00:09:03.534
that, you can vary the number of

00:09:03.534 --> 00:09:06.082
clusters and watch how well you can fit

00:09:06.082 --> 00:09:06.619
the data.

00:09:06.620 --> 00:09:08.750
If it's in general, when you add more

00:09:08.750 --> 00:09:10.340
components to mixture model, you should

00:09:10.340 --> 00:09:13.319
fit the data better, because you can

00:09:13.320 --> 00:09:15.330
always set the probability of using the

00:09:15.330 --> 00:09:18.900
new component at 0, so you can't in

00:09:18.900 --> 00:09:21.860
general fit the data worse than

00:09:21.910 --> 00:09:24.480
before, but as the question is, as you

00:09:24.480 --> 00:09:26.270
add more components would you be able

00:09:26.270 --> 00:09:28.455
to significantly improve the fitness of

00:09:28.455 --> 00:09:30.690
the data and that can be used to

00:09:30.690 --> 00:09:33.030
determine the right number of clusters.

00:09:33.770 --> 00:09:36.110
And finally, evaluation of clustering

00:09:36.110 --> 00:09:38.190
results and can be done both directly

00:09:38.190 --> 00:09:39.160
and indirectly.

00:09:40.290 --> 00:09:42.360
And we also would like to do both in

00:09:42.360 --> 00:09:44.930
order to get good sense about how our

00:09:44.930 --> 00:09:45.930
method works.

00:09:46.490 --> 00:09:48.870
So here's some suggested reading, and

00:09:48.870 --> 00:09:51.490
this is particularly useful to better

00:09:51.490 --> 00:09:53.620
understand the how the measures are

00:09:53.620 --> 00:09:57.590
calculated and clustering in general.


