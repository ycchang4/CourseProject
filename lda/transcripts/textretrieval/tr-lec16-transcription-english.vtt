WEBVTT Kind: captions; Language: en-US

NOTE
Created on 2021-02-27T00:07:15.3172683Z by ClassTranscribe

00:00:00.280 --> 00:00:02.610
So average precision is computed

00:00:02.610 --> 00:00:03.880
for just one query.

00:00:16.180 --> 00:00:17.380
But we generally experiment

00:00:17.380 --> 00:00:19.990
with many different queries and

00:00:19.990 --> 00:00:23.700
this is to avoid the variance across

00:00:23.700 --> 00:00:24.310
queries.

00:00:24.310 --> 00:00:26.539
Depending on the queries you use, you

00:00:26.540 --> 00:00:30.150
might make different conclusions, so

00:00:30.150 --> 00:00:31.940
it's better to use more queries.

00:00:33.480 --> 00:00:35.830
If you use more queries then you would

00:00:35.830 --> 00:00:37.955
also have to take average of the

00:00:37.955 --> 00:00:39.535
average precision over all these

00:00:39.535 --> 00:00:39.900
queries.

00:00:41.500 --> 00:00:42.650
So how can we do that?

00:00:43.480 --> 00:00:47.540
You can naturally think of just doing

00:00:47.540 --> 00:00:49.750
arithmetic mean as we know.

00:00:50.540 --> 00:00:52.390
Always tend to think in this way. So this would give us what is called Mean Average Precision or MAP. In this case we take arithmetic mean of all the average precisions over set of queries or topics.

00:01:09.870 --> 00:01:12.310
But as I just mentioned in another

00:01:12.310 --> 00:01:14.090
lecture, is this good?

00:01:15.250 --> 00:01:17.820
Recall that we talked about the

00:01:17.820 --> 00:01:19.880
different ways of combining precision

00:01:19.880 --> 00:01:21.480
and recall. And

00:01:21.480 --> 00:01:24.500
we conclude that the arithmetic mean is

00:01:24.500 --> 00:01:26.680
not as good as the F measure.

00:01:27.290 --> 00:01:28.400
But here it's the same.

00:01:28.400 --> 00:01:29.940
We can also think about the alternative

00:01:29.940 --> 00:01:32.010
ways of aggregating the numbers.

00:01:32.010 --> 00:01:34.800
Don't just automatically assume that.

00:01:34.800 --> 00:01:36.856
Let's just take the arithmetic mean of

00:01:36.856 --> 00:01:38.510
the average precision over these

00:01:38.510 --> 00:01:39.060
queries.

00:01:39.060 --> 00:01:41.153
Let's think about what's the best way

00:01:41.153 --> 00:01:42.079
of aggregating.

00:01:42.790 --> 00:01:45.030
If you think about different ways,

00:01:45.030 --> 00:01:47.190
naturally you would probably be able

00:01:47.190 --> 00:01:48.970
to think about another way, which is

00:01:48.970 --> 00:01:49.970
geometric mean.

00:01:51.140 --> 00:01:53.530
And we called this kind of average gMAP

00:01:53.530 --> 00:01:54.120
map.

00:01:54.910 --> 00:01:55.945
This is another way.

00:01:55.945 --> 00:01:57.790
So now, once you think about the two

00:01:57.790 --> 00:01:59.855
different ways of doing the same thing,

00:01:59.855 --> 00:02:02.140
the natural question to ask is which

00:02:02.140 --> 00:02:03.070
one is better so.

00:02:05.140 --> 00:02:08.310
So do you use MAP or gMAP?

00:02:09.520 --> 00:02:11.170
Again, that's important question.

00:02:11.170 --> 00:02:13.080
Imagine you are again testing a new

00:02:13.080 --> 00:02:15.890
algorithms by comparing it with your

00:02:15.890 --> 00:02:17.370
old algorithm in the search engine.

00:02:18.200 --> 00:02:21.350
Now you test it on multiple topics.

00:02:21.990 --> 00:02:23.700
Now you've got the average precisions

00:02:23.700 --> 00:02:24.860
for all these topics.

00:02:24.860 --> 00:02:27.310
Now you are thinking of looking at the

00:02:27.310 --> 00:02:28.980
overall performance you have to take

00:02:28.980 --> 00:02:29.560
average.

00:02:30.860 --> 00:02:32.900
But which which strategy would you use?

00:02:33.960 --> 00:02:34.650
Now first

00:02:35.260 --> 00:02:36.580
you should also think about the

00:02:36.580 --> 00:02:38.269
question, would it make a difference?

00:02:38.270 --> 00:02:41.270
Can you think of scenarios where using

00:02:41.270 --> 00:02:43.050
one of them would make a difference?

00:02:43.050 --> 00:02:44.470
That is, they would give different the

00:02:44.470 --> 00:02:46.190
rankings of those methods.

00:02:47.460 --> 00:02:49.440
And that also means depending on the

00:02:49.440 --> 00:02:52.265
way you average, or you take the

00:02:52.265 --> 00:02:54.500
average of these average precisions,

00:02:55.450 --> 00:02:57.410
you will get different conclusions.

00:02:57.410 --> 00:02:59.650
This makes the question become even

00:02:59.650 --> 00:03:00.430
more important.

00:03:01.690 --> 00:03:03.370
So which one would you use?

00:03:05.280 --> 00:03:06.890
Again, if you look at the difference

00:03:06.890 --> 00:03:09.750
between these different ways of

00:03:09.750 --> 00:03:13.200
aggregating the average position, you

00:03:13.200 --> 00:03:15.930
will realize in arithmetic mean the sum

00:03:15.930 --> 00:03:17.720
is dominant by large values.

00:03:18.410 --> 00:03:20.150
So what does a large menu value here

00:03:20.150 --> 00:03:20.420
mean?

00:03:20.420 --> 00:03:22.410
It means the query is relatively easy.

00:03:22.410 --> 00:03:24.870
You can have a high average precision,

00:03:25.840 --> 00:03:27.990
where as gMAP tends to be

00:03:27.990 --> 00:03:31.110
affected more by lower values and those

00:03:31.110 --> 00:03:33.850
are the queries that don't have good

00:03:33.850 --> 00:03:34.395
performance.

00:03:34.395 --> 00:03:36.550
The average precision is low.

00:03:37.300 --> 00:03:40.460
So if you think about improving the

00:03:40.460 --> 00:03:42.010
search engine for those difficult

00:03:42.010 --> 00:03:45.430
queries than gMAP would be preferred.

00:03:47.370 --> 00:03:49.060
On the other hand, that if you just

00:03:49.060 --> 00:03:52.650
want to have improvement over all the

00:03:52.650 --> 00:03:54.750
kinds of queries or particular popular

00:03:54.750 --> 00:03:56.750
queries, that might be easy and you

00:03:56.750 --> 00:03:59.390
want to make the perfect and maybe MAP

00:03:59.390 --> 00:04:00.670
would be them preferred.

00:04:00.670 --> 00:04:03.164
So again, the answer depends on your

00:04:03.164 --> 00:04:05.440
users, your user's tasks, and their

00:04:05.440 --> 00:04:06.800
preferences.

00:04:07.940 --> 00:04:10.860
So the point that here is.

00:04:11.540 --> 00:04:13.290
To think about the multiple ways to

00:04:13.290 --> 00:04:15.347
solve the same problem and then compare

00:04:15.347 --> 00:04:17.430
them and think carefully about

00:04:17.430 --> 00:04:19.770
differences and which one makes more

00:04:19.770 --> 00:04:20.260
sense.

00:04:20.260 --> 00:04:23.180
Often in one of them might make sense

00:04:23.180 --> 00:04:25.444
in one situation and another might make

00:04:25.444 --> 00:04:27.500
more sense in a different situation, so

00:04:27.500 --> 00:04:29.630
it's important to figure out under what

00:04:29.630 --> 00:04:31.730
situations one is preferred.

00:04:35.380 --> 00:04:37.320
As a special case of the mean average

00:04:37.320 --> 00:04:39.150
precision, we can also think about the

00:04:39.150 --> 00:04:41.390
case where there is precisely one

00:04:41.390 --> 00:04:42.330
relevant document.

00:04:43.000 --> 00:04:44.190
And this happens often.

00:04:44.190 --> 00:04:46.550
For example, in what's called a known item

00:04:46.550 --> 00:04:48.680
search, where you know a target page.

00:04:48.680 --> 00:04:50.590
Let's say you want to find the Amazon

00:04:50.590 --> 00:04:53.600
home page, you have one relevant

00:04:53.600 --> 00:04:55.500
document there, and you hope to find

00:04:55.500 --> 00:04:56.000
it.

00:04:56.000 --> 00:04:57.443
And that's called the known item

00:04:57.443 --> 00:04:57.896
search.

00:04:57.896 --> 00:05:00.150
In that case, there is precisely one

00:05:00.150 --> 00:05:02.080
relevant document, or in another

00:05:02.080 --> 00:05:03.460
application like a question answering.

00:05:03.460 --> 00:05:05.470
Maybe there's only one answer there, so

00:05:05.470 --> 00:05:07.740
if you rank the answers, then your goal

00:05:07.740 --> 00:05:10.450
is ranked at one particular answer on

00:05:10.450 --> 00:05:11.780
top right?

00:05:11.780 --> 00:05:14.950
So in this case, you can easily verify,

00:05:15.000 --> 00:05:17.200
the average precision will basically

00:05:17.200 --> 00:05:18.130
boil down

00:05:19.420 --> 00:05:22.459
two reciprocal rank, that is one

00:05:22.460 --> 00:05:25.710
over R, where R is the rank position

00:05:25.710 --> 00:05:28.080
of that single relevant document.

00:05:28.080 --> 00:05:29.900
So if that document is ranked on the

00:05:29.900 --> 00:05:34.270
very top, R is 1 and then it's one for

00:05:34.270 --> 00:05:35.178
reciprocal rank.

00:05:35.178 --> 00:05:38.400
If it's ranked at the second, then it's

00:05:38.400 --> 00:05:40.080
1 / 2 etc.

00:05:41.050 --> 00:05:44.050
And then we can also take a average of

00:05:44.050 --> 00:05:45.513
all these average position or

00:05:45.513 --> 00:05:47.550
reciprocal rank over a set of topics

00:05:47.550 --> 00:05:49.410
and that would give us something called

00:05:49.410 --> 00:05:53.830
Mean Reciprocal Rank. It is a very popular

00:05:53.830 --> 00:05:58.180
value for known item search or any

00:05:58.180 --> 00:06:00.750
ranking problem where you have just one

00:06:00.750 --> 00:06:01.840
relevant item.

00:06:02.880 --> 00:06:06.568
Now again, here you can see this R

00:06:06.568 --> 00:06:10.036
actually is meaningful here, and this

00:06:10.036 --> 00:06:13.086
R is basically indicating how much

00:06:13.086 --> 00:06:15.581
effort an user would have to make in

00:06:15.581 --> 00:06:17.927
order to find that relevant document.

00:06:17.927 --> 00:06:20.961
If it's ranked on the top is no effort

00:06:20.961 --> 00:06:23.630
that you have to make or little effort,

00:06:23.630 --> 00:06:26.430
but if it's ranked at 100 then you

00:06:26.430 --> 00:06:30.330
actually have to read presumably 100

00:06:30.330 --> 00:06:31.840
documents in order to find it.

00:06:31.840 --> 00:06:33.330
So in this sense,

00:06:33.390 --> 00:06:36.020
R is also meaningful measure and the

00:06:36.020 --> 00:06:38.177
reciprocal rank will take the

00:06:38.177 --> 00:06:40.990
reciprocal of R instead of using R

00:06:40.990 --> 00:06:41.620
directly.

00:06:42.660 --> 00:06:44.750
So one natural question here is, why

00:06:44.750 --> 00:06:46.340
not simply using R?

00:06:46.340 --> 00:06:48.180
Now imagine if you are to design a

00:06:48.180 --> 00:06:50.760
measure to measure performance of the

00:06:50.760 --> 00:06:53.910
ranking system when there is only one

00:06:53.910 --> 00:06:54.890
relevant item.

00:06:55.590 --> 00:06:58.080
You might have thought about using r

00:06:58.080 --> 00:06:59.720
directly as the measure.

00:06:59.720 --> 00:07:02.000
After all that measures the users

00:07:02.000 --> 00:07:03.070
effort, right?

00:07:04.670 --> 00:07:07.790
But think about, if you take the

00:07:07.790 --> 00:07:10.710
average of this over a large number of

00:07:10.710 --> 00:07:11.270
topics,

00:07:12.080 --> 00:07:13.890
again, it would make a difference right,

00:07:13.890 --> 00:07:16.666
for one single topic using R or using

00:07:16.666 --> 00:07:18.730
one overall wouldn't make any

00:07:18.730 --> 00:07:19.440
difference.

00:07:20.080 --> 00:07:20.920
It's the same

00:07:20.920 --> 00:07:23.580
larger R with correspond to a small

00:07:23.580 --> 00:07:27.010
one overall, but the difference would

00:07:27.010 --> 00:07:30.930
only show when show up when you have

00:07:30.930 --> 00:07:32.220
many topics.

00:07:32.220 --> 00:07:34.680
So again think about average of mean

00:07:34.680 --> 00:07:37.640
reciprocal rank versus average of just

00:07:37.640 --> 00:07:38.190
R.

00:07:39.180 --> 00:07:40.080
What's the difference?

00:07:40.080 --> 00:07:41.630
Do you see any difference?

00:07:41.630 --> 00:07:44.090
And would this difference change the

00:07:44.090 --> 00:07:45.200
order of systems

00:07:45.880 --> 00:07:46.920
in our conclusion?

00:07:48.940 --> 00:07:52.410
And it turns out that there is actually

00:07:52.410 --> 00:07:53.863
a big difference, and if you think

00:07:53.863 --> 00:07:56.033
about it, if you want to think about it

00:07:56.033 --> 00:07:58.450
and then yourself, then pause the video.

00:07:58.450 --> 00:08:02.690
Basically the difference is if you take

00:08:02.690 --> 00:08:04.740
some of R directly, then again will

00:08:04.740 --> 00:08:07.750
be dominated by large values of R.

00:08:07.750 --> 00:08:08.850
So what are those values?

00:08:08.850 --> 00:08:12.159
Those are basically large values that

00:08:12.160 --> 00:08:15.080
indicate the lowly ranked results.

00:08:15.080 --> 00:08:17.099
That means the relevant item is ranked

00:08:17.100 --> 00:08:19.030
very low

00:08:19.080 --> 00:08:21.990
down on the list and the sum, the

00:08:21.990 --> 00:08:22.470
audacity.

00:08:22.470 --> 00:08:23.960
Also the average would be then

00:08:23.960 --> 00:08:26.350
dominated by where those relevant

00:08:26.350 --> 00:08:29.650
documents are ranked in the lower

00:08:29.650 --> 00:08:31.730
portion of the ranked list, but from a

00:08:31.730 --> 00:08:33.930
user's perspective we care more about

00:08:33.930 --> 00:08:35.750
the highly ranked documents.

00:08:35.750 --> 00:08:38.380
So by taking this transformation by

00:08:38.380 --> 00:08:39.790
using reciprocal rank,

00:08:40.540 --> 00:08:42.996
here we emphasize more on the

00:08:42.996 --> 00:08:45.173
difference on the top and think about

00:08:45.173 --> 00:08:46.820
the difference between one and two.

00:08:46.820 --> 00:08:48.160
It will make a big difference.

00:08:48.760 --> 00:08:52.299
In one over R, but think about 100 and

00:08:52.299 --> 00:08:54.480
101 and one it won't make much

00:08:54.480 --> 00:08:56.270
difference if you use this.

00:08:56.930 --> 00:08:58.830
But if you use this, there will be a

00:08:58.830 --> 00:08:59.590
big difference.

00:09:00.200 --> 00:09:02.860
Being 100 and let's say 1000.

00:09:03.550 --> 00:09:05.170
Right, so this is not the desirable.

00:09:06.160 --> 00:09:07.990
On the other hand, one and two won't make

00:09:07.990 --> 00:09:10.310
much difference, so this is yet another

00:09:10.310 --> 00:09:11.950
case where there may be multiple

00:09:11.950 --> 00:09:13.770
choices of doing the same thing, and

00:09:13.770 --> 00:09:15.050
then you need to figure out which one

00:09:15.050 --> 00:09:15.860
makes more sense.

00:09:17.380 --> 00:09:19.300
So to summarize, we

00:09:19.900 --> 00:09:22.020
show the Precision recall curve,

00:09:22.020 --> 00:09:24.080
can characterize the overall accuracy

00:09:24.080 --> 00:09:25.010
of a ranked list.

00:09:25.610 --> 00:09:26.640
And we

00:09:27.260 --> 00:09:29.610
emphasized that the actual utility over

00:09:29.610 --> 00:09:31.480
ranking list that depends on how many

00:09:31.480 --> 00:09:33.800
top rankings results are user would

00:09:33.800 --> 00:09:34.620
actually examine.

00:09:34.620 --> 00:09:37.240
Some users will examine more than

00:09:37.240 --> 00:09:39.590
others and average precision is the

00:09:39.590 --> 00:09:41.210
standard measure for comparing two

00:09:41.210 --> 00:09:42.190
ranking methods.

00:09:42.190 --> 00:09:45.080
It combines precision and recall and

00:09:45.080 --> 00:09:46.930
it's sensitive to the rank of every

00:09:46.930 --> 00:09:47.980
relevant the document.


